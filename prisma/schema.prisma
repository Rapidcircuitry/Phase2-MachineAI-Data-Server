generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SystemUser {
  id                  Int                @id @default(autoincrement()) @map("user_id")
  fullName            String             @map("user_full_name")
  email               String             @unique @map("user_email")
  phone               String             @unique @map("user_phone")
  isActive            Boolean            @default(true) @map("is_active")
  isDeleted           Boolean            @default(false) @map("is_deleted")
  isEmailVerified     Boolean            @default(false) @map("is_email_verified")
  password            String             @map("user_password")
  userType            String             @default("dashboard_user") @map("user_type")
  resetToken          String?            @map("reset_token")
  resetTokenExpiresAt DateTime?          @map("reset_token_expires_at")
  createdAt           DateTime           @default(now()) @map("created_at")
  updatedAt           DateTime           @updatedAt @map("updated_at")
  sessions            SystemUserSession?

  @@index([email], map: "user_email_index")
  @@index([phone], map: "user_phone_index")
  @@map("SystemUserInfo")
}

model SystemUserSession {
  id         String     @id @default(uuid()) @map("session_id")
  userId     Int        @unique @map("user_id")
  token      String
  expiresAt  DateTime   @map("expires_at")
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  systemUser SystemUser @relation(fields: [userId], references: [id])

  @@map("SystemUserSessionInfo")
}

model DeviceType {
  id                 Int                  @id @default(autoincrement()) @map("device_type_id")
  name               String               @map("device_type_name")
  description        String               @map("device_type_description")
  model              String               @map("device_type_model")
  manufacturer       String               @map("device_type_manufacturer")
  protocol           String               @map("device_type_protocol")
  isActive           Boolean              @default(true) @map("is_active")
  isDeleted          Boolean              @default(false) @map("is_deleted")
  createdAt          DateTime             @default(now()) @map("created_at")
  updatedAt          DateTime             @updatedAt @map("updated_at")
  DeviceToDeviceType DeviceToDeviceType[]

  @@map("DeviceTypeInfo")
}

model DeviceTemplate {
  id          Int      @id @default(autoincrement()) @map("device_template_id")
  name        String   @map("device_template_name")
  description String?  @map("device_template_description")
  config      Json     @map("device_template_config")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("DeviceTemplateInfo")
}

model DeviceOwner {
  id        Int       @id @default(autoincrement()) @map("owner_id")
  fullName  String    @map("owner_full_name")
  email     String    @unique @map("owner_email")
  phone     String?   @unique @map("owner_phone")
  isActive  Boolean   @default(true) @map("is_active")
  deviceId  Int       @unique @map("device_id")
  isDeleted Boolean   @default(false) @map("is_deleted")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  devices   Devices[]

  @@index([email], map: "owner_email_index")
  @@index([phone], map: "owner_phone_index")
  @@map("DeviceOwnerInfo")
}

model Devices {
  id                   Int                    @id @default(autoincrement()) @map("device_id")
  name                 String?                @map("device_name")
  description          String?                @map("device_description")
  macId                String                 @unique @map("device_mac_id")
  chipId               String                 @map("device_chip_id")
  config               Json?                  @map("device_custom_config")
  ioMapping            Json?                  @map("device_io_mapping")
  inputStates          Boolean[]              @default([false, false, false, false]) @map("device_input_states")
  outputStates         Boolean[]              @default([false, false, false, false]) @map("device_output_states")
  dataInterval         Int?                   @map("device_data_interval")
  emailScheduleTime    String?                @map("device_email_schedule_time")
  cronSchedule         String?                @map("device_cron_schedule")
  recipientEmails      String[]               @map("device_recipient_emails")
  lastConnectedAt      DateTime?              @map("last_connected_at")
  ownerId              Int?                   @map("owner_id")
  isConfigured         Boolean                @default(false) @map("is_configured")
  isPaused             Boolean                @default(false) @map("is_paused")
  isActive             Boolean                @default(false) @map("is_active")
  isDeleted            Boolean                @default(false) @map("is_deleted")
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime               @updatedAt @map("updated_at")
  maxRange             Float?                 @map("analog_input_max")
  minRange             Float?                 @map("analog_input_min")
  analogInputType      AnalogInputType?       @map("analog_input_type")
  unit                 String?                @map("analog_input_unit")
  analogLabel          String?                @map("analog_label")
  AnalogDeviceDataInfo AnalogDeviceDataInfo[]
  DeviceData           DeviceData[]
  deviceTypes          DeviceToDeviceType[]
  owner                DeviceOwner?           @relation(fields: [ownerId], references: [id])

  @@index([macId], map: "device_mac_id_index")
  @@index([chipId], map: "device_chip_id_index")
  @@index([ownerId], map: "owner_id_index")
  @@map("DevicesInfo")
}

model DeviceToDeviceType {
  id           Int        @id @default(autoincrement())
  deviceId     Int        @map("device_id")
  deviceTypeId Int        @map("device_type_id")
  device       Devices    @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceType   DeviceType @relation(fields: [deviceTypeId], references: [id])

  @@unique([deviceId, deviceTypeId], name: "unique_device_devicetype")
  @@map("DeviceToDeviceType")
}

model DeviceData {
  id             Int      @id @default(autoincrement()) @map("data_id")
  deviceId       Int      @map("device_id")
  data           Json     @map("data_payload")
  timestamp      DateTime @default(now()) @map("data_timestamp")
  device_type_id Int
  device         Devices  @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@index([deviceId, timestamp], map: "device_data_deviceid_timestamp_index")
  @@map("DeviceDataInfo")
}

model AnalogDeviceDataInfo {
  data_id        Int             @id @default(autoincrement())
  device_id      Int
  input_type     AnalogInputType
  input_min      Float
  input_max      Float
  data_value     Float
  data_unit      String
  data_label     String
  received_value Float
  timestamp      DateTime        @default(now())
  DevicesInfo    Devices         @relation(fields: [device_id], references: [id], onDelete: Cascade)

  @@index([device_id, timestamp], map: "analog_device_data_deviceid_timestamp_index")
}

enum AnalogInputType {
  FOUR_TO_TWENTY
  ZERO_TO_TEN
  ERROR
}
